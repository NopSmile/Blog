// Code generated by protoc-gen-go. DO NOT EDIT.
// source: hello.proto

/*
Package hello is a generated protocol buffer package.

It is generated from these files:
	hello.proto

It has these top-level messages:
	Message
	MessageBox
*/
package hello

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ErrorCode int32

const (
	ErrorCode_EnumSuccess ErrorCode = 0
	ErrorCode_EnumError   ErrorCode = 1
	ErrorCode_EnumUnknown ErrorCode = 2
)

var ErrorCode_name = map[int32]string{
	0: "EnumSuccess",
	1: "EnumError",
	2: "EnumUnknown",
}
var ErrorCode_value = map[string]int32{
	"EnumSuccess": 0,
	"EnumError":   1,
	"EnumUnknown": 2,
}

func (x ErrorCode) String() string {
	return proto.EnumName(ErrorCode_name, int32(x))
}
func (ErrorCode) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Message struct {
	Id        int32     `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Message   string    `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	ErrorCode ErrorCode `protobuf:"varint,3,opt,name=errorCode,enum=hello.ErrorCode" json:"errorCode,omitempty"`
	Extra     []string  `protobuf:"bytes,4,rep,name=extra" json:"extra,omitempty"`
}

func (m *Message) Reset()                    { *m = Message{} }
func (m *Message) String() string            { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()               {}
func (*Message) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Message) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Message) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Message) GetErrorCode() ErrorCode {
	if m != nil {
		return m.ErrorCode
	}
	return ErrorCode_EnumSuccess
}

func (m *Message) GetExtra() []string {
	if m != nil {
		return m.Extra
	}
	return nil
}

type MessageBox struct {
	Messages []*Message `protobuf:"bytes,1,rep,name=messages" json:"messages,omitempty"`
}

func (m *MessageBox) Reset()                    { *m = MessageBox{} }
func (m *MessageBox) String() string            { return proto.CompactTextString(m) }
func (*MessageBox) ProtoMessage()               {}
func (*MessageBox) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *MessageBox) GetMessages() []*Message {
	if m != nil {
		return m.Messages
	}
	return nil
}

func init() {
	proto.RegisterType((*Message)(nil), "hello.Message")
	proto.RegisterType((*MessageBox)(nil), "hello.MessageBox")
	proto.RegisterEnum("hello.ErrorCode", ErrorCode_name, ErrorCode_value)
}

func init() { proto.RegisterFile("hello.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 209 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x44, 0x90, 0x31, 0x4f, 0x85, 0x30,
	0x14, 0x85, 0x6d, 0x11, 0x9f, 0xbd, 0x44, 0x6c, 0x6e, 0x1c, 0x3a, 0x36, 0x6f, 0x6a, 0xde, 0xc0,
	0x80, 0x8b, 0x83, 0x93, 0x86, 0xd1, 0xa5, 0xc6, 0x1f, 0x80, 0xd0, 0x28, 0x11, 0x5a, 0xd3, 0x42,
	0xc4, 0x7f, 0x6f, 0x84, 0xc2, 0x1b, 0xcf, 0x3d, 0x5f, 0xbe, 0x93, 0x5c, 0xc8, 0x3e, 0x4d, 0xdf,
	0xbb, 0xe2, 0xdb, 0xbb, 0xd1, 0x61, 0xba, 0x84, 0xe3, 0x2f, 0x1c, 0x5e, 0x4c, 0x08, 0xf5, 0x87,
	0xc1, 0x1c, 0x68, 0xd7, 0x0a, 0x22, 0x89, 0x4a, 0x35, 0xed, 0x5a, 0x14, 0x70, 0x18, 0xd6, 0x4a,
	0x50, 0x49, 0x14, 0xd3, 0x5b, 0xc4, 0x02, 0x98, 0xf1, 0xde, 0xf9, 0x67, 0xd7, 0x1a, 0x91, 0x48,
	0xa2, 0xf2, 0x92, 0x17, 0xab, 0xbc, 0xda, 0xee, 0xfa, 0x8c, 0xe0, 0x1d, 0xa4, 0x66, 0x1e, 0x7d,
	0x2d, 0x2e, 0x65, 0xa2, 0x98, 0x5e, 0xc3, 0xf1, 0x01, 0x20, 0x4e, 0x3f, 0xb9, 0x19, 0x4f, 0x70,
	0x1d, 0xf5, 0x41, 0x10, 0x99, 0xa8, 0xac, 0xcc, 0xa3, 0x32, 0x42, 0x7a, 0xef, 0x4f, 0x8f, 0xc0,
	0xf6, 0x1d, 0xbc, 0x85, 0xac, 0xb2, 0xd3, 0xf0, 0x3a, 0x35, 0x8d, 0x09, 0x81, 0x5f, 0xe0, 0x0d,
	0xb0, 0xff, 0xc3, 0x42, 0x70, 0xb2, 0xf5, 0x6f, 0xf6, 0xcb, 0xba, 0x1f, 0xcb, 0xe9, 0xfb, 0xd5,
	0xf2, 0x80, 0xfb, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x68, 0x3f, 0x76, 0x35, 0x0f, 0x01, 0x00,
	0x00,
}
